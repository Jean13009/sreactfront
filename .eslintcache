[{"/home/jean/dev/sreactfront/src/index.js":"1","/home/jean/dev/sreactfront/src/App.js":"2","/home/jean/dev/sreactfront/src/reportWebVitals.js":"3","/home/jean/dev/sreactfront/src/components/Navbar.jsx":"4","/home/jean/dev/sreactfront/src/pages/HomePage.jsx":"5","/home/jean/dev/sreactfront/src/pages/CustomersPage.jsx":"6","/home/jean/dev/sreactfront/src/contexts/AuthContext.js":"7","/home/jean/dev/sreactfront/src/services/authAPI.js":"8","/home/jean/dev/sreactfront/src/components/PrivateRoute.jsx":"9","/home/jean/dev/sreactfront/src/pages/LoginPage.jsx":"10","/home/jean/dev/sreactfront/src/pages/InvoicePage.jsx":"11","/home/jean/dev/sreactfront/src/pages/RegisterPage.jsx":"12","/home/jean/dev/sreactfront/src/pages/CustomerPage.jsx":"13","/home/jean/dev/sreactfront/src/pages/InvoicesPage.jsx":"14","/home/jean/dev/sreactfront/src/services/config.js":"15","/home/jean/dev/sreactfront/src/services/customersAPI.js":"16","/home/jean/dev/sreactfront/src/services/invoicesAPI.js":"17","/home/jean/dev/sreactfront/src/components/Pagination.jsx":"18","/home/jean/dev/sreactfront/src/services/usersAPI.jsx":"19","/home/jean/dev/sreactfront/src/components/loaders/TableLoader.jsx":"20","/home/jean/dev/sreactfront/src/components/loaders/FormContentLoader.jsx":"21","/home/jean/dev/sreactfront/src/components/forms/Field.jsx":"22","/home/jean/dev/sreactfront/src/components/forms/Select.jsx":"23"},{"size":500,"mtime":1611854257879,"results":"24","hashOfConfig":"25"},{"size":1888,"mtime":1611854257875,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1611854257883,"results":"27","hashOfConfig":"25"},{"size":2175,"mtime":1611854257875,"results":"28","hashOfConfig":"25"},{"size":340,"mtime":1611854490814,"results":"29","hashOfConfig":"25"},{"size":4504,"mtime":1611854257879,"results":"30","hashOfConfig":"25"},{"size":129,"mtime":1611854257879,"results":"31","hashOfConfig":"25"},{"size":1861,"mtime":1611854257883,"results":"32","hashOfConfig":"25"},{"size":402,"mtime":1611854257875,"results":"33","hashOfConfig":"25"},{"size":2255,"mtime":1611856646826,"results":"34","hashOfConfig":"25"},{"size":4520,"mtime":1611855855213,"results":"35","hashOfConfig":"25"},{"size":3321,"mtime":1611854257883,"results":"36","hashOfConfig":"25"},{"size":3951,"mtime":1611854257879,"results":"37","hashOfConfig":"25"},{"size":4887,"mtime":1611854257883,"results":"38","hashOfConfig":"25"},{"size":257,"mtime":1611854257883,"results":"39","hashOfConfig":"25"},{"size":632,"mtime":1611854257883,"results":"40","hashOfConfig":"25"},{"size":749,"mtime":1611854257883,"results":"41","hashOfConfig":"25"},{"size":1515,"mtime":1611854257875,"results":"42","hashOfConfig":"25"},{"size":163,"mtime":1611854257883,"results":"43","hashOfConfig":"25"},{"size":1103,"mtime":1611854257879,"results":"44","hashOfConfig":"25"},{"size":893,"mtime":1611854257879,"results":"45","hashOfConfig":"25"},{"size":524,"mtime":1611854257875,"results":"46","hashOfConfig":"25"},{"size":492,"mtime":1611854257879,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"sz67vl",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/home/jean/dev/sreactfront/src/index.js",[],["103","104"],"/home/jean/dev/sreactfront/src/App.js",["105"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch, withRouter } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport AuthContext from \"./contexts/AuthContext\";\nimport CustomersPage from \"./pages/CustomersPage\";\nimport HomePage from \"./pages/HomePage\";\nimport InvoicesPage from \"./pages/InvoicesPage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport AuthAPI from \"./services/authAPI\";\nimport CustomerPage from \"./pages/CustomerPage\";\nimport InvoicePage from \"./pages/InvoicePage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// On apporte le CSS personnalisé\nrequire(\"./styles/app.css\");\n\nAuthAPI.setup();\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    AuthAPI.isAuthenticated()\n  );\n\n  const NavbarWithRouter = withRouter(Navbar);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        setIsAuthenticated\n      }}\n    >\n      <HashRouter>\n        <NavbarWithRouter />\n\n        <main className=\"container pt-5\">\n          <Switch>\n            <Route path=\"/login\" component={LoginPage} />\n            <Route path=\"/register\" component={RegisterPage} />\n            <PrivateRoute path=\"/invoices/:id\" component={InvoicePage} />\n            <PrivateRoute path=\"/invoices\" component={InvoicesPage} />\n            <PrivateRoute path=\"/customers/:id\" component={CustomerPage} />\n            <PrivateRoute path=\"/customers\" component={CustomersPage} />\n            <Route path=\"/\" component={HomePage} />\n          </Switch>\n        </main>\n      </HashRouter>\n      <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;","/home/jean/dev/sreactfront/src/reportWebVitals.js",[],"/home/jean/dev/sreactfront/src/components/Navbar.jsx",[],"/home/jean/dev/sreactfront/src/pages/HomePage.jsx",[],"/home/jean/dev/sreactfront/src/pages/CustomersPage.jsx",[],"/home/jean/dev/sreactfront/src/contexts/AuthContext.js",[],"/home/jean/dev/sreactfront/src/services/authAPI.js",["106"],"\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { LOGIN_API } from \"./config\";\n\n/**\n * Déconnexion (suppression du token du localStorage et sur Axios)\n */\nfunction logout() {\n  window.localStorage.removeItem(\"authToken\");\n  delete axios.defaults.headers[\"Authorization\"];\n}\n\n/**\n * Requête HTTP d'authentification et stockage du token dans le storage et sur Axios\n * @param {object} credentials\n */\nfunction authenticate(credentials) {\n  return axios\n    .post(LOGIN_API, credentials)\n    .then(response => response.data.token)\n    .then(token => {\n      // Je stocke le token dans mon localStorage\n      window.localStorage.setItem(\"authToken\", token);\n      // On prévient Axios qu'on a maintenant un header par défaut sur toutes nos futures requetes HTTP\n      setAxiosToken(token);\n    });\n}\n\n/**\n * Positionne le token JWT sur Axios\n * @param {string} token Le token JWT\n */\nfunction setAxiosToken(token) {\n  axios.defaults.headers[\"Authorization\"] = \"Bearer \" + token;\n}\n\n/**\n * Mise en place lors du chargement de l'application\n */\nfunction setup() {\n  // 1. Voir si on a un token ?\n  const token = window.localStorage.getItem(\"authToken\");\n  // 2. Si le token est encore valide\n  if (token) {\n    const { exp: expiration } = jwtDecode(token);\n    if (expiration * 1000 > new Date().getTime()) {\n      setAxiosToken(token);\n    }\n  }\n}\n\n/**\n * Permet de savoir si on est authentifié ou pas\n * @returns boolean\n */\nfunction isAuthenticated() {\n  // 1. Voir si on a un token ?\n  const token = window.localStorage.getItem(\"authToken\");\n  // 2. Si le token est encore valide\n  if (token) {\n    const { exp: expiration } = jwtDecode(token);\n    if (expiration * 1000 > new Date().getTime()) {\n      return true;\n    }\n    return false;\n  }\n  return false;\n}\n\nexport default {\n  authenticate,\n  logout,\n  setup,\n  isAuthenticated\n};","/home/jean/dev/sreactfront/src/components/PrivateRoute.jsx",[],"/home/jean/dev/sreactfront/src/pages/LoginPage.jsx",[],"/home/jean/dev/sreactfront/src/pages/InvoicePage.jsx",["107","108"]," \nimport React, { useState, useEffect } from \"react\";\nimport Field from \"../components/forms/Field\";\nimport Select from \"../components/forms/Select\";\nimport { Link } from \"react-router-dom\";\nimport CustomersAPI from \"../services/customersAPI\";\nimport InvoicesAPI from \"../services/invoicesAPI\";\nimport { toast } from \"react-toastify\";\nimport FormContentLoader from \"../components/loaders/FormContentLoader\";\n\nconst InvoicePage = ({ history, match }) => {\n  const { id } = match.params;\n\n  const [invoice, setInvoice] = useState({\n    amount: \"\",\n    customer: \"\",\n    status: \"SENT\"\n  });\n  const [customers, setCustomers] = useState([]);\n  const [editing, setEditing] = useState(false);\n  const [errors, setErrors] = useState({\n    amount: \"\",\n    customer: \"\",\n    status: \"\"\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Récupération des clients\n  const fetchCustomers = async () => {\n    try {\n      const data = await CustomersAPI.findAll();\n      setCustomers(data);\n      setLoading(false);\n\n      if(!invoice.customer && id === \"new\") setInvoice({...invoice, customer:data[0].id});\n    } catch (error) {\n      toast.error(\"Impossible de charger les clients\");\n      history.replace(\"/invoices\");\n    }\n  };\n\n  // Récupération d'une facture\n  const fetchInvoice = async id => {\n    try {\n      const { amount, status, customer } = await InvoicesAPI.find(id);\n      setInvoice({ amount, status, customer: customer.id });\n      setLoading(false);\n    } catch (error) {\n      toast.error(\"Impossible de charger la facture demandée\");\n      history.replace(\"/invoices\");\n    }\n  };\n\n  // Récupération de la liste des clients à chaque chargement du composant\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  // Récupération de la bonne facture quand l'identifiant de l'URL change\n  useEffect(() => {\n    if (id !== \"new\") {\n      setEditing(true);\n      fetchInvoice(id);\n    }\n  }, [id]);\n\n  // Gestion des changements des inputs dans le formulaire\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setInvoice({ ...invoice, [name]: value });\n  };\n\n  // Gestion de la soumission du formulaire\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      if (editing) {\n        await InvoicesAPI.update(id, invoice);\n        toast.success(\"La facture a bien été modifiée\");\n      } else {\n        await InvoicesAPI.create(invoice);\n        toast.success(\"La facture a bien été enregistrée\");\n        history.replace(\"/invoices\");\n      }\n    } catch ({ response }) {\n      const { violations } = response.data;\n\n      if (violations) {\n        const apiErrors = {};\n        violations.forEach(({ propertyPath, message }) => {\n          apiErrors[propertyPath] = message;\n        });\n\n        setErrors(apiErrors);\n        toast.error(\"Des erreurs dans votre formulaire\");\n      }\n    }\n  };\n\n  return (\n    <>\n      {(editing && <h1>Modification d'une facture</h1>) || (\n        <h1>Création d'une facture</h1>\n      )}\n      {loading && <FormContentLoader />}\n\n      {!loading && (\n        <form onSubmit={handleSubmit}>\n          <Field\n            name=\"amount\"\n            type=\"number\"\n            placeholder=\"Montant de la facture\"\n            label=\"Montant\"\n            onChange={handleChange}\n            value={invoice.amount}\n            error={errors.amount}\n          />\n\n          <Select\n            name=\"customer\"\n            label=\"Client\"\n            value={invoice.customer}\n            error={errors.customer}\n            onChange={handleChange}\n          >\n            {customers.map(customer => (\n              <option key={customer.id} value={customer.id}>\n                {customer.firstName} {customer.lastName}\n              </option>\n            ))}\n          </Select>\n\n          <Select\n            name=\"status\"\n            label=\"Statut\"\n            value={invoice.status}\n            error={errors.status}\n            onChange={handleChange}\n          >\n            <option value=\"SENT\">Envoyée</option>\n            <option value=\"PAID\">Payée</option>\n            <option value=\"CANCELLED\">Annulée</option>\n          </Select>\n\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-success\">\n              Enregistrer\n            </button>\n            <Link to=\"/invoices\" className=\"btn btn-link\">\n              Retour aux factures\n            </Link>\n          </div>\n        </form>\n      )}\n    </>\n  );\n};\nexport default InvoicePage;","/home/jean/dev/sreactfront/src/pages/RegisterPage.jsx",[],"/home/jean/dev/sreactfront/src/pages/CustomerPage.jsx",["109"],"\nimport React, { useState, useEffect } from \"react\";\nimport Field from \"./../components/forms/Field\";\nimport { Link } from \"react-router-dom\";\nimport CustomersAPI from \"../services/customersAPI\";\nimport { toast } from \"react-toastify\";\nimport FormContentLoader from \"../components/loaders/FormContentLoader\";\n\nconst CustomerPage = ({ match, history }) => {\n  const { id } = match.params;\n\n  const [customer, setCustomer] = useState({\n    lastName: \"\",\n    firstName: \"\",\n    email: \"\",\n    company: \"\"\n  });\n  const [errors, setErrors] = useState({\n    lastName: \"\",\n    firstName: \"\",\n    email: \"\",\n    company: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [editing, setEditing] = useState(false);\n\n  // Récupération du customer en fonction de l'identifiant\n  const fetchCustomer = async id => {\n    try {\n      const { firstName, lastName, email, company } = await CustomersAPI.find(\n        id\n      );\n      setCustomer({ firstName, lastName, email, company });\n      setLoading(false);\n    } catch (error) {\n      toast.error(\"Le client n'a pas pu être chargé\");\n      history.replace(\"/customers\");\n    }\n  };\n\n  // Chargement du customer si besoin au chargement du composant ou au changement de l'identifiant\n  useEffect(() => {\n    if (id !== \"new\") {\n      setLoading(true);\n      setEditing(true);\n      fetchCustomer(id);\n    }\n  }, [id]);\n\n  // Gestion des changements des inputs dans le formulaire\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n    setCustomer({ ...customer, [name]: value });\n  };\n\n  // Gestion de la soumission du formulaire\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      setErrors({});\n\n      if (editing) {\n        await CustomersAPI.update(id, customer);\n        toast.success(\"Le client a bien été modifié\");\n      } else {\n        await CustomersAPI.create(customer);\n        toast.success(\"Le client a bien été créé\");\n        history.replace(\"/customers\");\n      }\n    } catch ({ response }) {\n      const { violations } = response.data;\n\n      if (violations) {\n        const apiErrors = {};\n        violations.forEach(({ propertyPath, message }) => {\n          apiErrors[propertyPath] = message;\n        });\n\n        setErrors(apiErrors);\n        toast.error(\"Des erreurs dans votre formulaire !\");\n      }\n    }\n  };\n\n  return (\n    <>\n      {(!editing && <h1>Création d'un client</h1>) || (\n        <h1>Modification du client</h1>\n      )}\n\n      {loading && <FormContentLoader />}\n      {!loading && (\n        <form onSubmit={handleSubmit}>\n          <Field\n            name=\"lastName\"\n            label=\"Nom de famille\"\n            placeholder=\"Nom de famille du client\"\n            value={customer.lastName}\n            onChange={handleChange}\n            error={errors.lastName}\n          />\n          <Field\n            name=\"firstName\"\n            label=\"Prénom\"\n            placeholder=\"Prénom du client\"\n            value={customer.firstName}\n            onChange={handleChange}\n            error={errors.firstName}\n          />\n          <Field\n            name=\"email\"\n            label=\"Email\"\n            placeholder=\"Adresse email du client\"\n            type=\"email\"\n            value={customer.email}\n            onChange={handleChange}\n            error={errors.email}\n          />\n          <Field\n            name=\"company\"\n            label=\"Entreprise\"\n            placeholder=\"Entreprise du client\"\n            value={customer.company}\n            onChange={handleChange}\n            error={errors.company}\n          />\n\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"btn btn-success\">\n              Enregistrer\n            </button>\n            <Link to=\"/customers\" className=\"btn btn-link\">\n              Retour à la liste\n            </Link>\n          </div>\n        </form>\n      )}\n    </>\n  );\n};\nexport default CustomerPage;","/home/jean/dev/sreactfront/src/pages/InvoicesPage.jsx",[],"/home/jean/dev/sreactfront/src/services/config.js",[],"/home/jean/dev/sreactfront/src/services/customersAPI.js",["110"],"\nimport axios from \"axios\";\nimport { CUSTOMERS_API } from \"./config\";\n\nfunction findAll() {\n  return axios\n    .get(CUSTOMERS_API)\n    .then(response => response.data[\"hydra:member\"]);\n}\n\nfunction find(id) {\n  return axios\n    .get(CUSTOMERS_API + \"/\" + id)\n    .then(response => response.data);\n}\n\nfunction deleteCustomer(id) {\n  return axios.delete(CUSTOMERS_API + \"/\" + id);\n}\n\nfunction update(id, customer) {\n  return axios.put(CUSTOMERS_API + \"/\" + id, customer);\n}\n\nfunction create(customer) {\n  return axios.post(CUSTOMERS_API, customer);\n}\n\nexport default {\n  findAll,\n  find,\n  create,\n  update,\n  delete: deleteCustomer\n};","/home/jean/dev/sreactfront/src/services/invoicesAPI.js",["111"],"import axios from \"axios\";\nimport { INVOICES_API } from \"./config\";\n\nfunction findAll() {\n  return axios\n    .get(INVOICES_API)\n    .then(response => response.data[\"hydra:member\"]);\n}\n\nfunction deleteInvoice(id) {\n  return axios.delete(INVOICES_API + \"/\" + id);\n}\n\nfunction find(id) {\n  return axios\n    .get(INVOICES_API + \"/\" + id)\n    .then(response => response.data);\n}\n\nfunction update(id, invoice) {\n  return axios.put(INVOICES_API + \"/\" + id, {\n    ...invoice,\n    customer: `/api/customers/${invoice.customer}`\n  });\n}\n\nfunction create(invoice) {\n  return axios.post(INVOICES_API, {\n    ...invoice,\n    customer: `/api/customers/${invoice.customer}`\n  });\n}\n\nexport default {\n  findAll,\n  find,\n  create,\n  update,\n  delete: deleteInvoice\n};","/home/jean/dev/sreactfront/src/components/Pagination.jsx",[],"/home/jean/dev/sreactfront/src/services/usersAPI.jsx",["112"],"import axios from \"axios\";\nimport { USERS_API } from \"./config\";\n\nfunction register(user) {\n  return axios.post(USERS_API, user);\n}\n\nexport default {\n  register\n};","/home/jean/dev/sreactfront/src/components/loaders/TableLoader.jsx",[],"/home/jean/dev/sreactfront/src/components/loaders/FormContentLoader.jsx",[],"/home/jean/dev/sreactfront/src/components/forms/Field.jsx",[],"/home/jean/dev/sreactfront/src/components/forms/Select.jsx",[],["113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":71,"column":1,"nodeType":"125","endLine":76,"endColumn":3},{"ruleId":"126","severity":1,"message":"127","line":57,"column":6,"nodeType":"128","endLine":57,"endColumn":8,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":65,"column":6,"nodeType":"128","endLine":65,"endColumn":10,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"132","line":48,"column":6,"nodeType":"128","endLine":48,"endColumn":10,"suggestions":"133"},{"ruleId":"123","severity":1,"message":"124","line":29,"column":1,"nodeType":"125","endLine":35,"endColumn":3},{"ruleId":"123","severity":1,"message":"124","line":34,"column":1,"nodeType":"125","endLine":40,"endColumn":3},{"ruleId":"123","severity":1,"message":"124","line":8,"column":1,"nodeType":"125","endLine":10,"endColumn":3},{"ruleId":"115","replacedBy":"134"},{"ruleId":"117","replacedBy":"135"},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCustomers'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'fetchInvoice'. Either include it or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'fetchCustomer'. Either include it or remove the dependency array.",["140"],["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [fetchCustomers]",{"range":"147","text":"148"},"Update the dependencies array to be: [fetchInvoice, id]",{"range":"149","text":"150"},"Update the dependencies array to be: [fetchCustomer, id]",{"range":"151","text":"152"},[1722,1724],"[fetchCustomers]",[1905,1909],"[fetchInvoice, id]",[1366,1370],"[fetchCustomer, id]"]